import pandas as pd
import numpy as np
from sklearn.linear_model import LinearRegression
from sklearn.model_selection import train_test_split
from sklearn.metrics import mean_squared_error, r2_score
import matplotlib.pyplot as plt

# Synthetic dataset
data = {
    'hour_of_day': np.tile(np.arange(24), 10),
    'temperature': np.random.normal(30, 5, 240),
    'evs_charging': np.random.randint(5, 100, 240)
}
df = pd.DataFrame(data)
df.head()

# Features and target
X = df[['hour_of_day', 'temperature']]
y = df['evs_charging']

# Train-test split
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Model training
model = LinearRegression()
model.fit(X_train, y_train)

# Predictions and Evaluation
y_pred = model.predict(X_test)
mse = mean_squared_error(y_test, y_pred)
r2 = r2_score(y_test, y_pred)
print(f"MSE: {mse:.2f}, R2 Score: {r2:.4f}")

# Plotting results
plt.scatter(y_test, y_pred)
plt.xlabel('Actual EVs Charging')
plt.ylabel('Predicted EVs Charging')
plt.title('Actual vs Predicted')
plt.grid(True)
plt.show()